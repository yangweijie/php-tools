name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    name: Build Binary
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-22.04
            platform: linux
            arch: x64
          - os: windows-2022
            platform: windows
            arch: x64
          - os: macos-13
            platform: macos
            arch: x64
          - os: macos-14
            platform: macos
            arch: arm64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download PHP binary (Linux)
        if: runner.os == 'Linux'
        run: |
          # Download static PHP binary
          wget https://github.com/php/php-src/releases/download/php-8.2.0/php-8.2.0-linux-x64.tar.gz
          tar -xzf php-8.2.0-linux-x64.tar.gz
          echo "$PWD/php-8.2.0-linux-x64" >> $GITHUB_PATH

      - name: Download PHP binary (Windows)
        if: runner.os == 'Windows'
        run: |
          # Download static PHP binary
          curl -L -o php-8.2.0-windows-x64.zip https://github.com/php/php-src/releases/download/php-8.2.0/php-8.2.0-windows-x64.zip
          unzip php-8.2.0-windows-x64.zip
          echo "$PWD/php-8.2.0-windows-x64" >> $env:GITHUB_PATH

      - name: Download PHP binary (macOS)
        if: runner.os == 'macOS'
        run: |
          # Download static PHP binary based on architecture
          if [[ "$(uname -m)" == "arm64" ]]; then
            echo "Downloading PHP for ARM64"
            curl -L -o php-8.2.0-macos-arm64.tar.gz https://github.com/php/php-src/releases/download/php-8.2.0/php-8.2.0-macos-arm64.tar.gz
            tar -xzf php-8.2.0-macos-arm64.tar.gz
            echo "$PWD/php-8.2.0-macos-arm64" >> $GITHUB_PATH
          else
            echo "Downloading PHP for x64"
            curl -L -o php-8.2.0-macos-x64.tar.gz https://github.com/php/php-src/releases/download/php-8.2.0/php-8.2.0-macos-x64.tar.gz
            tar -xzf php-8.2.0-macos-x64.tar.gz
            echo "$PWD/php-8.2.0-macos-x64" >> $GITHUB_PATH
          fi

      - name: Install Composer
        run: |
          curl -sS https://getcomposer.org/installer | php
          mv composer.phar /usr/local/bin/composer

      - name: Install dependencies
        run: |
          composer install --no-dev --prefer-dist --no-progress --no-suggest

      - name: Build PHAR
        run: |
          echo "Building on ${{ runner.os }} (${{ matrix.arch }})..."
          php toolkit app:build tools --timeout=600

      - name: Set binary name
        run: |
          if [[ "${{ runner.os }}" == "Linux" ]]; then
            echo "BINARY_NAME=tools-linux" >> $GITHUB_ENV
          elif [[ "${{ runner.os }}" == "Windows" ]]; then
            echo "BINARY_NAME=tools-windows.exe" >> $GITHUB_ENV
          elif [[ "${{ runner.os }}" == "macOS" && "${{ matrix.arch }}" == "arm64" ]]; then
            echo "BINARY_NAME=tools-macos-arm64" >> $GITHUB_ENV
          elif [[ "${{ runner.os }}" == "macOS" && "${{ matrix.arch }}" == "x64" ]]; then
            echo "BINARY_NAME=tools-macos-x64" >> $GITHUB_ENV
          fi

      - name: Rename binary
        run: |
          if [[ "${{ runner.os }}" == "Windows" ]]; then
            ren builds\tools.exe builds\${{ env.BINARY_NAME }}
          else
            mv builds/tools builds/${{ env.BINARY_NAME }}
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: tools-${{ matrix.platform }}-${{ matrix.arch }}
          path: builds/${{ env.BINARY_NAME }}
          if-no-files-found: error

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: List downloaded files
        run: |
          echo "Downloaded files:"
          find . -type f -name "tools-*" | sort

      - name: Get version from tag
        id: get_version
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "version=untagged-$(date +%Y%m%d)" >> $GITHUB_OUTPUT
          else
            echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          fi

      - name: Create Release
        id: create_release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.get_version.outputs.version }}
          name: Release ${{ steps.get_version.outputs.version }}
          draft: false
          prerelease: false
          artifacts: "tools-linux-x64/tools-linux,tools-windows-x64/tools-windows.exe,tools-macos-arm64/tools-macos-arm64,tools-macos-x64/tools-macos-x64"
          artifactErrorsFailBuild: true
          allowUpdates: true